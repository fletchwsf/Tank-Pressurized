package relay
public

with Base_Types;
with EMV2;

-- Abstract relay with logical inputs and outputs
abstract relay
	features
		signalIn : in data port;
		signalOut : out data port;
		contactsIn : in event port;
		contactsOut : in event port;
	
	annex EMV2 {**
		use types errorLibrary;
		use behavior errorLibrary::FailStop;
		component error behavior
			events
				Failure : error event {serviceOmission};
			transitions
				t1 : operational -[failure{serviceOmission}]-> failStop;
		end component;
	**};
end relay;

device relayNormallyOpen extends relay
	flows
		signalFlowPath : flow path signalIn -> signalOut {latency => 400 ms .. 600 ms;} in modes (closed) ;
	modes
		-- a normally open relay transitions immediately to open
		open : initial mode;
		closed : mode;
		t2 : open -[contactsIn]-> closed;
		t3 : closed -[contactsOut]-> open;

end relayNormallyOpen;

device implementation relayNormallyOpen.i
end relayNormallyOpen.i;


device relayNormallyClosed extends relay
	flows
		signalFlowPath : flow path signalIn -> signalOut {latency => 400 ms .. 600 ms;} in modes (closed) ;
	modes
		-- a normally closed relay transitions immediately to closed
		closed : initial mode;
		open : mode;
		t2 : open -[contactsIn]-> closed;
		t3 : closed -[contactsOut]-> open;
end relayNormallyClosed;

device timedRelay extends relay
	--signalFlowPath : refined to  {latency => 59000 ms .. 60000 ms;};
end timedRelay;

device implementation timedRelay.i
end timedRelay.i;

end relay;